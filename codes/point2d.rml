let module Point2D = struct(point)
  type t = { x : Int.t ; y : Int.t }
  let add = fun(p1 : point.t, p2 : point.t) ->
    { x = Int.plus p1.x p2.x ; y = Int.plus p1.y p2.y }
end;;

(*
Sortie de l'algorithme et signature.

Point2D :
point => sig
  type t = 'self => sig
    val x : Int.t
    val y : Int.t
  end .. 'self => sig
    val x : Int.t
    val y : Int.t
  end
  val add : forall(p : point.t) forall(p : point.t) 'self => sig
    val x : Int.t
    val y : Int.t
  end
end
*)
